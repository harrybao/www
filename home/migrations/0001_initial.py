# Generated by Django 2.0 on 2018-04-19 00:48

from django.db import migrations, models
import django.db.models.deletion
import system.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(max_length=255, verbose_name='文章标题')),
                ('context', models.TextField(verbose_name='文章内容')),
                ('art_date', models.DateField(verbose_name='收录时间')),
            ],
            options={
                'verbose_name_plural': '文章管理',
                'verbose_name': '文章管理',
            },
        ),
        migrations.CreateModel(
            name='BatchLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fare_year', models.CharField(max_length=4, null=True, verbose_name='年份')),
                ('fare_lend', models.CharField(max_length=500, null=True, verbose_name='生源地')),
                ('fare_batch', models.CharField(max_length=50, null=True, verbose_name='录取批次')),
                ('art_science', models.CharField(max_length=50, null=True, verbose_name='文理科')),
                ('control_line', models.FloatField(null=True, verbose_name='控制线')),
            ],
            options={
                'verbose_name_plural': '历年批次线',
                'verbose_name': '历年批次线',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(max_length=200, verbose_name='学院名称')),
            ],
            options={
                'verbose_name_plural': '学院设置',
                'verbose_name': '学院设置',
            },
        ),
        migrations.CreateModel(
            name='digdetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail_name', models.CharField(max_length=100, verbose_name='名称')),
                ('det_remarks', models.CharField(max_length=500, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '数字字典详情',
                'verbose_name': '数字字典详情',
            },
        ),
        migrations.CreateModel(
            name='digital',
            fields=[
                ('dig_id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='数字字典编号')),
                ('dig_name', models.CharField(max_length=255, verbose_name='数字字典名称')),
            ],
            options={
                'verbose_name_plural': '数字字典',
                'verbose_name': '数字字典',
            },
        ),
        migrations.CreateModel(
            name='EnrollLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll_year', models.CharField(max_length=4, null=True, verbose_name='年份')),
                ('batch', models.CharField(max_length=100, null=True, verbose_name='录取批次')),
                ('art_science', models.CharField(max_length=50, null=True, verbose_name='文理科')),
                ('highest_score', models.FloatField(null=True, verbose_name='最高分')),
                ('minimum_score', models.FloatField(null=True, verbose_name='最低分')),
                ('average_score', models.FloatField(null=True, verbose_name='平均分')),
            ],
            options={
                'verbose_name_plural': '院校录取线',
                'verbose_name': '院校录取线',
            },
        ),
        migrations.CreateModel(
            name='majorSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '开设院校',
                'verbose_name': '开设院校',
            },
        ),
        migrations.CreateModel(
            name='news',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_context', models.TextField(verbose_name='消息内容')),
                ('new_date', models.DateField(verbose_name='消息时间')),
                ('readed', models.CharField(max_length=4, null=True, verbose_name='是否已读')),
            ],
            options={
                'verbose_name_plural': '消息表',
                'verbose_name': '消息表',
            },
        ),
        migrations.CreateModel(
            name='professional',
            fields=[
                ('profes_id', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='专业编号')),
                ('profes_name', models.CharField(max_length=200, verbose_name='专业名称')),
                ('related', models.CharField(max_length=600, null=True, verbose_name='相关专业')),
                ('profess_class', models.CharField(max_length=300, null=True, verbose_name='科类')),
                ('main_class', models.TextField(null=True, verbose_name='主干学科')),
                ('practice', models.TextField(null=True, verbose_name='实践教学')),
                ('objective', models.TextField(null=True, verbose_name='培养目标')),
                ('tra_require', models.TextField(null=True, verbose_name='培养要求')),
                ('direction', models.TextField(null=True, verbose_name='就业方向')),
            ],
            options={
                'verbose_name_plural': '专业信息管理',
                'verbose_name': '专业信息管理',
            },
        ),
        migrations.CreateModel(
            name='queAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.CharField(max_length=200, verbose_name='回复者')),
                ('ans_time', models.DateField(verbose_name='回复时间')),
                ('ans_text', models.TextField(null=True, verbose_name='回答内容')),
            ],
            options={
                'verbose_name_plural': '用户的回答',
                'verbose_name': '用户的回答',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('que_tittle', models.CharField(max_length=300, verbose_name='标题')),
                ('que_text', models.TextField(null=True, verbose_name='问题内容')),
                ('questioner', models.CharField(max_length=200, verbose_name='提问者')),
                ('que_time', models.DateField(verbose_name='提问时间')),
                ('classify', models.CharField(max_length=200, null=True, verbose_name='问题分类')),
            ],
            options={
                'verbose_name_plural': '只读用户提的问题',
                'verbose_name': '只读用户提的问题',
            },
        ),
        migrations.CreateModel(
            name='quetionViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.CharField(max_length=200, verbose_name='用户编号')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Questions')),
            ],
            options={
                'verbose_name_plural': '问题查看表',
                'verbose_name': '问题查看表',
            },
        ),
        migrations.CreateModel(
            name='readCollect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=200, null=True, verbose_name='阅读用户')),
                ('read_date', models.DateField(null=True, verbose_name='时间')),
                ('read_collect', models.CharField(max_length=4, verbose_name='阅读或收藏')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Article')),
            ],
            options={
                'verbose_name_plural': '文章操作表',
                'verbose_name': '文章操作表',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='学校编号')),
                ('school_name', models.CharField(max_length=200, verbose_name='学校名称')),
                ('school_badge', models.ImageField(null=True, storage=system.storage.ImageStorage(), upload_to='./badge/', verbose_name='校徽')),
                ('school_motto', models.CharField(max_length=100, null=True, verbose_name='校训')),
                ('school_address', models.CharField(max_length=200, null=True, verbose_name='学校地址')),
                ('school_location', models.CharField(max_length=100, null=True, verbose_name='所在地')),
                ('school_mold', models.CharField(max_length=100, null=True, verbose_name='学校类型')),
                ('school_url', models.URLField(null=True, verbose_name='学校网址')),
                ('school_tel', models.CharField(max_length=100, null=True, verbose_name='联系电话')),
                ('school_abst', models.TextField(null=True, verbose_name='学校简介')),
            ],
            options={
                'verbose_name_plural': '院校管理',
                'verbose_name': '院校管理',
            },
        ),
        migrations.CreateModel(
            name='SchoolImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_pic', models.ImageField(storage=system.storage.ImageStorage(), upload_to='./image/', verbose_name='图片')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
            ],
            options={
                'verbose_name_plural': '学校图片',
                'verbose_name': '学校图片',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oppen_id', models.CharField(max_length=200, verbose_name='用户编号')),
                ('user_name', models.CharField(max_length=200, null=True, verbose_name='用户名称')),
                ('user_head', models.TextField(null=True, verbose_name='用户头像')),
            ],
            options={
                'verbose_name_plural': '用户信息管理',
                'verbose_name': '用户信息管理',
            },
        ),
        migrations.AddField(
            model_name='queanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Questions'),
        ),
        migrations.AddField(
            model_name='news',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.User'),
        ),
        migrations.AddField(
            model_name='majorset',
            name='profess',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.professional'),
        ),
        migrations.AddField(
            model_name='majorset',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School'),
        ),
        migrations.AddField(
            model_name='enrollline',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School'),
        ),
        migrations.AddField(
            model_name='digdetail',
            name='digital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.digital'),
        ),
        migrations.AddField(
            model_name='college',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School'),
        ),
        migrations.AddField(
            model_name='article',
            name='cate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.digdetail'),
        ),
    ]
